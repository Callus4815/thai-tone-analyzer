#!/usr/bin/env python3
"""
Simplified test script for Thai tone analysis algorithm.
Tests a subset of vowels and patterns.
"""

import requests
import json

def test_word(word):
    """Test a single word and return the result."""
    try:
        response = requests.post(
            'http://localhost:5001/analyze',
            headers={'Content-Type': 'application/json'},
            json={'word': word},
            timeout=5
        )
        
        if response.status_code == 200:
            result = response.json()
            return {
                'word': word,
                'success': True,
                'tone': result.get('tone', 'Unknown'),
                'explanation': result.get('explanation', ''),
                'syllables': result.get('syllables', []),
                'romanized': result.get('romanized', ''),
                'translation': result.get('translation', '')
            }
        else:
            return {
                'word': word,
                'success': False,
                'error': f'HTTP {response.status_code}'
            }
    except Exception as e:
        return {
            'word': word,
            'success': False,
            'error': str(e)
        }

# Test basic vowels
basic_vowels = [
    "‡∏Å‡∏≤", "‡∏Å‡∏∞",  # a
    "‡∏Å‡∏µ", "‡∏Å‡∏¥",  # i
    "‡∏Å‡∏π", "‡∏Å‡∏∏",  # u
    "‡πÄ‡∏Å", "‡πÄ‡∏Å‡∏∞", # e
    "‡πÅ‡∏Å", "‡πÅ‡∏Å‡∏∞", # ae
    "‡πÇ‡∏Å", "‡πÇ‡∏Å‡∏∞", # o
    "‡∏Å‡∏≠", "‡πÄ‡∏Å‡∏≤‡∏∞", # o
    "‡∏Å‡∏∑‡∏≠", "‡∏Å‡∏∂",  # ue
]

# Test tone marks
tone_marks = [
    "‡∏Å‡πà‡∏≤",  # mai ek
    "‡∏Å‡πâ‡∏≤",  # mai tho
    "‡∏Å‡πä‡∏≤",  # mai tri
    "‡∏Å‡πã‡∏≤",  # mai chattawa
]

# Test edge cases
edge_cases = [
    "‡∏ô‡πà‡∏≠‡∏á",  # ‡∏≠ as vowel
    "‡∏≠‡∏∞‡πÑ‡∏£",  # ‡∏≠ as zero consonant
    "‡∏ô‡πà‡∏≤‡πÄ‡∏ö‡∏∑‡πà‡∏≠",  # complex multi-syllable
    "‡πÇ‡∏Å‡∏£‡∏ò",  # consonant cluster
]

print("üß™ Thai Tone Analysis Test Suite")
print("=" * 50)

# Test basic vowels
print("\nüìù Testing basic vowels:")
print("-" * 30)
for word in basic_vowels:
    result = test_word(word)
    status = "‚úÖ" if result['success'] else "‚ùå"
    tone_info = f" ‚Üí {result['tone']}" if result['success'] else f" ‚Üí ERROR"
    print(f"{status} {word}{tone_info}")

# Test tone marks
print("\nüéØ Testing tone marks:")
print("-" * 30)
for word in tone_marks:
    result = test_word(word)
    status = "‚úÖ" if result['success'] else "‚ùå"
    tone_info = f" ‚Üí {result['tone']}" if result['success'] else f" ‚Üí ERROR"
    print(f"{status} {word}{tone_info}")

# Test edge cases
print("\nüîç Testing edge cases:")
print("-" * 30)
for word in edge_cases:
    result = test_word(word)
    status = "‚úÖ" if result['success'] else "‚ùå"
    tone_info = f" ‚Üí {result['tone']}" if result['success'] else f" ‚Üí ERROR"
    print(f"{status} {word}{tone_info}")
    if result['success'] and result['syllables']:
        for i, syllable in enumerate(result['syllables'], 1):
            print(f"    Syllable {i}: {syllable['syllable']} ‚Üí {syllable['tone']}")

print("\n‚úÖ Test completed!")
